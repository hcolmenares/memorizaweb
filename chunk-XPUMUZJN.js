import{a as n,b as d,c as l,d as c}from"./chunk-3FATA2AS.js";var h=class p{players=new l([]);currentPlayer=new l(null);gameTime=new l(0);cards=new l([]);flippedCards=new l([]);gameStarted=new l(!1);players$=this.players.asObservable();currentPlayer$=this.currentPlayer.asObservable();gameTime$=this.gameTime.asObservable();cards$=this.cards.asObservable();flippedCards$=this.flippedCards.asObservable();gameStarted$=this.gameStarted.asObservable();timer;constructor(){}initializeGame(t){let e=t.map((a,s)=>({id:s,name:a,score:0,time:0}));this.players.next(e),this.currentPlayer.next(e[0]),this.initializeCards(),this.startTimer(),this.gameStarted.next(!0),this.flippedCards.next([])}initializeCards(){let t=["santa","reindeer","tree","gift","snowman","bell","star","candy-cane"],e=[];t.forEach((a,s)=>{e.push({id:s*2,imageUrl:`${a}.jpg`,isFlipped:!1,isMatched:!1},{id:s*2+1,imageUrl:`${a}.jpg`,isFlipped:!1,isMatched:!1})}),this.cards.next(this.shuffleCards(e))}shuffleCards(t){return[...t].sort(()=>Math.random()-.5)}flipCard(t){let e=this.flippedCards.value,a=this.cards.value;if(e.length===2)return;let s=a.map(r=>r.id===t.id?d(n({},r),{isFlipped:!0}):r);this.cards.next(s);let i=[...e,t];this.flippedCards.next(i),i.length===2&&this.checkMatch(i)}checkMatch(t){setTimeout(()=>{let[e,a]=t,s=this.cards.value;if(e.imageUrl===a.imageUrl){let i=s.map(r=>r.id===e.id||r.id===a.id?d(n({},r),{isMatched:!0}):r);this.cards.next(i),this.updateScore(this.currentPlayer.value.id)}else{let i=s.map(r=>r.id===e.id||r.id===a.id?d(n({},r),{isFlipped:!1}):r);this.cards.next(i),this.nextPlayer()}this.flippedCards.next([]),this.checkGameEnd()},1e3)}checkGameEnd(){this.cards.value.every(e=>e.isMatched)&&this.endGame()}startTimer(){this.gameTime.next(0),this.timer=setInterval(()=>{this.gameTime.next(this.gameTime.value+1)},1e3)}endGame(){this.stopTimer(),this.gameStarted.next(!1);let e=this.players.value.map(a=>d(n({},a),{time:this.gameTime.value}));this.players.next(e)}stopTimer(){this.timer&&clearInterval(this.timer)}nextPlayer(){let t=this.players.value,a=(this.currentPlayer.value.id+1)%t.length;this.currentPlayer.next(t[a])}updateScore(t){let a=this.players.value.map(s=>s.id===t?d(n({},s),{score:s.score+1}):s);this.players.next(a)}resetGame(){this.stopTimer(),this.players.next([]),this.currentPlayer.next(null),this.gameTime.next(0),this.cards.next([]),this.flippedCards.next([]),this.gameStarted.next(!1)}static \u0275fac=function(e){return new(e||p)};static \u0275prov=c({token:p,factory:p.\u0275fac,providedIn:"root"})};export{h as a};
